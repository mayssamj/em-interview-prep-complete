"use strict";(()=>{var e={};e.id=8873,e.ids=[8873],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{e.exports=require("buffer")},4770:e=>{e.exports=require("crypto")},6162:e=>{e.exports=require("stream")},1764:e=>{e.exports=require("util")},9767:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>w,patchFetch:()=>q,requestAsyncStorage:()=>g,routeModule:()=>x,serverHooks:()=>f,staticGenerationAsyncStorage:()=>y});var s={};t.r(s),t.d(s,{POST:()=>h,dynamic:()=>l});var n=t(9303),a=t(8716),o=t(670),i=t(7070),u=t(2023),p=t.n(u),c=t(1482),d=t.n(c);let l="force-dynamic",m=process.env.JWT_SECRET||"your-secret-key";async function h(e){try{let r,s;let{username:n,password:a}=await e.json();if(!n||!a)return i.NextResponse.json({error:"Username and password are required"},{status:400});try{let{PrismaClient:e}=t(3524);r=new e,await r.$connect()}catch(e){return console.error("Prisma connection error:",e),i.NextResponse.json({error:"Database connection failed"},{status:500})}try{let e=await r.$queryRaw`
        SELECT id, username, password_hash, is_admin 
        FROM users 
        WHERE username = ${n}
        LIMIT 1
      `;s=e.length>0?e[0]:null,console.log("User query result:",s?"User found":"User not found")}catch(e){return console.error("Database query error:",e),await r.$disconnect(),i.NextResponse.json({error:"Database query failed"},{status:500})}if(!s||!await p().compare(a,s.password_hash))return await r.$disconnect(),i.NextResponse.json({error:"Invalid credentials"},{status:401});let o=d().sign({userId:s.id,username:s.username,isAdmin:s.is_admin},m,{expiresIn:"24h"}),u=i.NextResponse.json({message:"Login successful",user:{id:s.id,username:s.username,isAdmin:s.is_admin}});return u.cookies.set("token",o,{httpOnly:!0,secure:!0,sameSite:"strict",maxAge:86400}),await r.$disconnect(),u}catch(e){return console.error("Login error:",e),i.NextResponse.json({error:`Internal server error: ${e.message}`},{status:500})}}let x=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/auth/login/route",pathname:"/api/auth/login",filename:"route",bundlePath:"app/api/auth/login/route"},resolvedPagePath:"/home/ubuntu/em-interview-prep/app/api/auth/login/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:g,staticGenerationAsyncStorage:y,serverHooks:f}=x,w="/api/auth/login/route";function q(){return(0,o.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:y})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[9276,5972,2023,1482],()=>t(9767));module.exports=s})();